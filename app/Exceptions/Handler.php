<?php

namespace App\Exceptions;

use App\Notify\NotifyHelper;
use Illuminate\Foundation\Exceptions\Handler as ExceptionHandler;
use Psr\Log\LogLevel;
use Throwable;
use Illuminate\Auth\AuthenticationException;
use Illuminate\Auth\Access\AuthorizationException;
use Illuminate\Support\Arr;

class Handler extends ExceptionHandler
{
    use NotifyHelper;
    /**
     * A list of exception types with their corresponding custom log levels.
     *
     * @var array<class-string<Throwable>, LogLevel::*>
     */
    protected $levels = [
        //
    ];

    /**
     * A list of the exception types that are not reported.
     *
     * @var array<int, class-string<Throwable>>
     */
    protected $dontReport = [
        //
    ];

    /**
     * A list of the inputs that are never flashed to the session on validation exceptions.
     *
     * @var array<int, string>
     */
    protected $dontFlash = [
        'current_password',
        'password',
        'password_confirmation',
    ];

    /**
     * Register the exception handling callbacks for the application.
     *
     * @return void
     */
    public function register()
    {
        $this->reportable(function (Throwable $e) {
            //
        });
    }

//    public function render($request, Throwable $e)
//    {
//        if($e instanceof \Exception){
//            $this->errorNotify("something went wrong 🤷‍♂️");
//            return back();
//        }
//        return parent::render($request, $e); // TODO: Change the autogenerated stub
//    }
//    protected function unauthenticated($request, AuthenticationException $exception)
//    {
//        if ($request->expectsJson()) {
//            return response()->json([
//                'error' => 'Unauthenticated.'
//            ], 401
//            );
//        }
//        $guard = Arr::get($exception->guards(), 0);
////         dd('Handler', $exception);
//        $route = 'auth'; // $user
////        if ($guard == 'author') {
////            dd('Handler');
////            \Auth::logout();
////            $route = 'login.index';
////        }
//        dd('dsds');
//        return redirect()->route($route);
//    }
}
